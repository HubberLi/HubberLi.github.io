<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>零散知识点</title>
    <link href="undefined2019/11/20/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <url>2019/11/20/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<ul><li>war包相当于一个web项目，不需要运行的工程可以打成jar包</li><li>分布式开发：项目大，考虑业务扩展性</li><li>snapshot为快照版本即非正式版本，release为正式发布版本</li><li>依赖冲突：<blockquote><p>通俗的意思是pom中引入的两个或多个jar包，依赖了同一个但是不同版本的jar包<br>例如:org.apache.struts依赖spirng-beans-3.0.5，spring-context依赖spring-beans-4.2.4，但是发现spirng-beans-3.0.5加入到工程中，而我们希望spring-beans-4.2.4加入工程，这时就会有冲突<br>解决方法有三种：</p><blockquote><p>1.依赖调节原则<br>maven自动按照下边的原则调解：<br>声明者优先原则<br>在pom文件定义依赖，先声明的依赖为准。<br><img src="https://img-blog.csdnimg.cn/20191124004451607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTU3NTQy,size_16,color_FFFFFF,t_70" srcset="undefined" alt=""><br>测试：<br>如果将上边struts-spring-plugins和spring-context顺序颠倒(类比图片中的junit4.12和junit4.10的顺序颠倒)，系统将导入spring-beans-4.2.4。<br>分析：<br>由于spring-context在前边，以spring-context依赖的spring-beans-4.2.4为准，所以最终spring-beans-4.2.4添加到了工程中。<br>2.排除依赖<br>上边的问题也可以通过排除依赖方法辅助依赖调解，如下：<br>比如在依赖struts2-spring-plugin的设置中添加排除依赖，排除spring-beans，下边的配置表示：依赖struts2-spring-plugin，但排除struts2-spring-plugin所依赖的spring-beans。</p></blockquote></blockquote><pre><code>  &lt;!-- struts2-spring-plugin依赖spirng-beans-3.0.5 --&gt;  &lt;dependency&gt;      &lt;groupId&gt;org.apache.struts&lt;/groupId&gt;      &lt;artifactId&gt;struts2-spring-plugin&lt;/artifactId&gt;      &lt;version&gt;2.3.24&lt;/version&gt;      &lt;!-- 排除 spring-beans--&gt;      &lt;exclusions&gt;          &lt;exclusion&gt;              &lt;groupId&gt;org.springframework&lt;/groupId&gt;              &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;          &lt;/exclusion&gt;      &lt;exclusion&gt;              &lt;groupId&gt;org.springframework&lt;/groupId&gt;              &lt;artifactId&gt;spring-context&lt;/artifactId&gt;          &lt;/exclusion&gt;      &lt;/exclusions&gt;  &lt;/dependency&gt;</code></pre><blockquote><blockquote><p>3.锁定版本（推荐使用）<br>面对众多的依赖，有一种方法不用考虑依赖路径、声明优化等因素可以采用直接锁定版本的方法确定依赖构件的版本，版本锁定后则不考虑依赖的声明顺序或依赖的路径，以锁定的版本的为准添加到工程中，此方法在企业开发中常用。首先父工程中pom.xml文件添加,如下的配置是锁定了spring-beans和spring-context的版本：<br><img src="https://img-blog.csdnimg.cn/20191124004439700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTU3NTQy,size_16,color_FFFFFF,t_70" srcset="undefined" alt=""><br>注意：在工程中锁定依赖的版本并不代表在工程中添加了依赖，如果工程需要添加锁定版本的依赖则需要单独添加&lt;dependencies&gt;&lt;/dependencies&gt;标签，如下：<br><img src="https://img-blog.csdnimg.cn/20191124004426207.png" srcset="undefined" alt=""><br>上边添加的依赖并没有指定版本，原因是已在&lt;dependencyManagement&gt;中锁定了版本，所以在&lt;dependency&gt;下不需要再指定版本。</p></blockquote></blockquote></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="undefined2019/11/17/hello-world/"/>
    <url>2019/11/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>